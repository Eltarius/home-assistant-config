---
# ESPHome firmware for Sonoff POW R2 to manage the pool pump
#
# https://esphome.io/devices/sonoff.html#sonoff-pow-r2
#
esphome:
  name: pompe_piscine
  platform: ESP8266
  board: esp8285
  arduino_version: 2.4.2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ## use fast_connect if you are connecting to a hidden WiFi network, else comment it out
  # fast_connect: true

  # # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pompe_Piscine"

captive_portal:

# Enable logging
logger:
  # Disable the Serial interface on the POW
  # It is used by the power sensor
  baud_rate: 0

# Enable UART for the power sensor
uart:
  rx_pin: RX
  baud_rate: 4800

# Enable Home Assistant API
api:
  password: !secret api_password_pompe_piscine

ota:
  password: !secret ota_password_pompe_piscine

# Sync time with Home Assistant
time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/Paris

# Text Sensor with general information
text_sensor:
  - platform: wifi_info
    ip_address:
      name: esphome_pompe_piscine_IP
    ssid:
      name: esphome_pompe_piscine_SSID
    bssid:
      name: esphome_pompe_piscine_BSSID

sensor:
  # WiFi Signal sensor
  - platform: wifi_signal
    name: esphome_pompe_piscine_wifi_signal
    update_interval: 60s
  # Uptime sensor
  - platform: uptime
    name: esphome_pompe_piscine_uptime

  - platform: cse7766
    update_interval: 5s
    # Current sensor
    current:
      name: esphome_pompe_piscine_current
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.009
            - 0.38219 -> 0.399
            - 0.53516 -> 0.557
            - 2.3991 -> 2.490
            - 5.94955 -> 6.171
            - 7.89234 -> 8.188
        # Make everything below 0.01A appear as just 0A.
        # Furthermore it corrects 0.009A for the power usage of the plug.
        - lambda: if (x < (0.01 + 0.009)) return 0; else return (x - 0.009);
    # Voltage sensor
    voltage:
      name: esphome_pompe_piscine_voltage
      unit_of_measurement: V
      accuracy_decimals: 1
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.0
            - 229.46669 -> 230.9
            - 230.89482 -> 231.9
            - 232.66524 -> 233.5
            - 235.52 -> 236.6

    # Power sensor
    power:
      id: power
      name: esphome_pompe_piscine_power
      unit_of_measurement: W
      accuracy_decimals: 0
      filters:
        # Map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.99
            - 76.90890 -> 81.36
            - 121.20197 -> 127.5
            - 505.90393 -> 530.1
            - 989.39340 -> 1029.0
            - 1347.35217 -> 1412.0
            - 1802.86707 -> 1891.0
        # Make everything below 0W appear as just 0W.
        # Furthermore it corrects 0.99W for the power usage of the plug.
        - lambda: if (x < (0 + 0.99)) return 0; else return (x - 0.99);

  - platform: total_daily_energy
    name: esphome_pompe_piscine_daily_energy
    power_id: power
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

switch:
  # Switch to restart the plug
  - platform: restart
    name: esphome_pompe_piscine_restart
  # This is the actual exposed power switch
  - platform: gpio
    name: esphome_pompe_piscine_switch
    id: relay
    pin: GPIO12

binary_sensor:
  # Binary sensor for the button press
  - platform: gpio
    id: button
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - switch.toggle: relay
  # This binary sensor tells if the Pool Pump is powered on itself
  - platform: template
    name: esphome_pompe_piscine_on
    filters:
      - delayed_off: 10s
    lambda: |-
      return id(power).state > 1;
  - platform: status
    name: esphome_pompe_piscine_status

# Uses the blue LED as status indicator
status_led:
  pin:
    number: GPIO13
    inverted: true
